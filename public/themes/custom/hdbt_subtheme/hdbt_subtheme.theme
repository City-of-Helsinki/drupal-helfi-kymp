<?php

/**
 * @file
 * Functions to support theming in the HDBT Subtheme.
 */

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\node\Entity\Node;

/**
 * Implements hook_preprocess_HOOK().
 */
function hdbt_subtheme_preprocess_block(&$variables) {
  if (isset($variables['elements']['#id'])) {
    $variables['content']['#attributes']['block_id'] = $variables['elements']['#id'];
  }

  // Hides page title block from node type district.
  if ($variables['plugin_id'] == 'page_title_block') {
    $page_entity = hdbt_content_get_page_entity();
    if (
      $page_entity instanceof ContentEntityInterface &&
      $page_entity->hasField('field_hero') &&
      $page_entity->getType() == 'district'
    ) {
      $variables['hide_block'] = TRUE;
    }
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function hdbt_subtheme_theme_suggestions_block_alter(&$suggestions) {
  // Load theme suggestions for blocks from parent theme.
  foreach ($suggestions as &$suggestion) {
    $suggestion = str_replace('hdbt_subtheme_', '', $suggestion);
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Provide block based menu suggestions.
 */
function hdbt_subtheme_theme_suggestions_menu_alter(&$suggestions, $variables) {
  if (isset($variables['attributes']['block_id'])) {
    $block_id = str_replace('hdbt_subtheme_', '', $variables['attributes']['block_id']);

    switch ($block_id) {
      case 'mobile_navigation':
        $suggestions[] = 'menu__mobile';
        break;

      case 'mainnavigation':
        $suggestions[] = 'menu__main__desktop';
        break;

      case 'main_navigation_level_2':
        $suggestions[] = 'menu__main__sidebar';
        break;

      case 'brandingnavigation':
        $suggestions[] = 'menu__main__branding';
        break;

      default:
        $suggestions[] = 'menu__' . $variables['attributes']['block_id'];
        break;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function hdbt_subtheme_preprocess_paragraph__project_listing(&$variables) {
  $variables['#attached']['library'][] = 'hdbt_subtheme/project_listing';
  $projects = [];
  $paragraph = $variables['paragraph'];
  $selected_district = $paragraph->get('field_district_taxonomy')->target_id;

  $nids = \Drupal::entityQuery('node')->condition('type', 'project')->execute();
  $nodes = Node::loadMultiple($nids);

  $view_builder = \Drupal::entityTypeManager()->getViewBuilder('node');

  foreach ($nodes as $node) {
    $node_districts = $node->get('field_project_district')->referencedEntities();

    foreach ($node_districts as $district) {
      $district_tid = $district->tid->value;

      if ($district_tid == $selected_district) {
        $build = $view_builder->view($node, 'teaser');
        $projects[] = $build;
      }
    }
  }

  $variables['projects'] = $projects;
  $variables['project_count'] = count($projects);

  // @todo change to actual search page link
  $variables['search_link'] = '/';
}
