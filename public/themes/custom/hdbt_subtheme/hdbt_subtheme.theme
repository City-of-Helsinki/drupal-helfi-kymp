<?php

/**
 * @file
 * Functions to support theming in the HDBT Subtheme.
 */

declare(strict_types=1);

use Drupal\Core\Language\LanguageInterface;
use Drupal\Core\Url;
use Drupal\node\Entity\Node;

/**
 * Implements hook_preprocess_HOOK().
 */
function hdbt_subtheme_preprocess_block(&$variables) {
  if (isset($variables['elements']['#id'])) {
    $variables['content']['#attributes']['block_id'] = $variables['elements']['#id'];
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function hdbt_subtheme_theme_suggestions_block_alter(&$suggestions) {
  // Load theme suggestions for blocks from parent theme.
  foreach ($suggestions as &$suggestion) {
    $suggestion = str_replace('hdbt_subtheme_', '', $suggestion);
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function hdbt_subtheme_theme_suggestions_menu_alter(&$suggestions, $variables) {
  if (isset($variables['attributes']['block_id'])) {
    $block_id = str_replace('hdbt_subtheme_', '', $variables['attributes']['block_id']);

    $suggestions[] = match ($block_id) {
      'mobile_navigation' => 'menu__mobile',
      'mainnavigation' => 'menu__main__desktop',
      'main_navigation_level_2' => 'menu__main__sidebar',
      'brandingnavigation' => 'menu__main__branding',
      default => 'menu__' . $variables['attributes']['block_id'],
    };
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function hdbt_subtheme_preprocess_paragraph__project_listing(&$variables) {
  $paragraph = $variables['paragraph'];
  $variables['selected_district'] = $paragraph->get('field_project_list_district')->target_id;
  $variables['search_parameters'] = $paragraph->get('field_search_link_parameters')->value;
}

/**
 * Implements hook_preprocess_HOOK().
 */
function hdbt_subtheme_preprocess_views_view__project_list(&$variables) {
  // Set the search link for Refine search button using config.
  $projectSearchConfig = Drupal::config('helfi_kymp_content.project_search');
  if ($projectSearchPath = $projectSearchConfig->get('project_search_path')) {
    $variables['search_link'] = Url::fromUserInput($projectSearchPath)->toString();
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function hdbt_subtheme_preprocess_node(array &$variables) {
  // On project nodes print out the districts even if they are unpublished.
  if ($variables['node']->getType() === 'project') {
    $node = $variables['node'];
    $districts = $node->get('field_project_district')->getValue();
    $district_titles = [];
    foreach ($districts as $district) {
      $district_node_id = $district['target_id'];
      if (!$district_node = Node::load($district_node_id)) {
        continue;
      }
      $district_title = $district_node->getTitle();

      if ($district_node->hasTranslation($variables['current_langcode'])) {
        $district_title = $district_node->getTranslation($variables['current_langcode'])->getTitle();
      }

      $district_titles[] = $district_title;
    }
    $variables['district_titles'] = implode(', ', $district_titles);
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function hdbt_subtheme_preprocess_paragraph__journey_planner(array &$variables): void {
  $variables['#attached']['library'][] = 'hdbt/embedded-content-cookie-compliance';

  $langcode = \Drupal::languageManager()->getCurrentLanguage(LanguageInterface::TYPE_CONTENT)->getId();
  $variables['privacy_policy_url'] = helfi_eu_cookie_compliance_get_privacy_policy_url();
  $variables['media_service_url'] = 'https://reittiopas.hsl.fi';
  $variables['media_url'] = 'https://reittiopas.hsl.fi/haku?bikeOnly=1&lang=' . $langcode;
  $variables['media_id'] = 'journey-map';
}
