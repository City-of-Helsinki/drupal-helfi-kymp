<?php

/**
 * @file
 * Contains KYMP plans related functionalities.
 */

declare(strict_types=1);

use Drupal\Core\Pager\PagerDefault;
use Drupal\Core\Pager\PagerParameters;

/**
 * Implements hook_theme().
 */
function helfi_kymp_plans_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__list_of_plans' => [
      'template' => 'paragraph--list-of-plans',
    ],
  ];
}

/**
 * Implements hook_preprocess_paragraph().
 */
function helfi_kymp_plans_preprocess_paragraph__list_of_plans(&$variables) {
  // Get the title & description from the paragraph.
  $paragraph = $variables['elements']['#paragraph'];

  $title = $paragraph->get('field_list_of_plans_title')->value;
  $description = $paragraph->get('field_list_of_plans_description')->value;

  $variables['title'] = $title;
  $variables['description'] = $description;

  $service = \Drupal::service('helfi_kymp_plans');

  // Check if the list already exists in cache.
  if ($cache = \Drupal::cache()->get('helfi_kymp_plans')) {
    $plans = $cache->data;
  }
  else {
    $plans = $service->getPlans();

    // Cache for an hour.
    \Drupal::cache()->set('helfi_kymp_plans', $plans, \Drupal::time()->getRequestTime() + 3600, ['helfi_kymp_plans']);
  }

  // Add pagination.
  $items_per_page = 10;
  $total_items = count($plans);

  /** @var PagerDefault $pager */
  $pager = \Drupal::service('pager.manager')->createPager($total_items, $items_per_page);
  $current_page = \Drupal::service('pager.parameters')->findPage();

  // Slice the plans array to only show the current page.
  $paged_plans = array_slice($plans, $current_page * $items_per_page, $items_per_page);

  $variables['plans'] = $paged_plans;
  $variables['plan_count'] = $total_items;
  $variables['rss_feed_url'] = $service->getFeedUrl();

  // Attach the pager to the theme.
  $variables['pager'] = [
    '#type' => 'pager',
  ];


  // Adding a cache tag which is used by a cron script to periodically clear
  // the cache related to the list of plans.
  $variables['#cache']['tags'][] = 'helfi_kymp_plans';
}
